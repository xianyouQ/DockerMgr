<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youxianqin.dockermgr.dao.ReleaseMapper">
  <resultMap id="BaseResultMap" type="com.youxianqin.dockermgr.models.Release">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="release_conf_id" jdbcType="INTEGER" property="releaseConfId" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="operation_time" jdbcType="TIMESTAMP" property="operationTime" />
    <result column="service_id" jdbcType="INTEGER" property="serviceId" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="release_user_id" jdbcType="BIGINT" property="releaseUserId" />
    <result column="operation_user_id" jdbcType="BIGINT" property="operationUserId" />
    <result column="review_user_id" jdbcType="BIGINT" property="reviewUserId" />
    <result column="review_time" jdbcType="TIMESTAMP" property="reviewTime" />
    <result column="task_status" jdbcType="INTEGER" property="taskStatus" />
    <result column="cancel_user_id" jdbcType="INTEGER" property="cancelUserId" />
    <result column="idc_list" jdbcType="VARCHAR" property="idcList" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.youxianqin.dockermgr.models.ReleaseWithBLOBs">
    <result column="release_detail" jdbcType="LONGVARCHAR" property="releaseDetail" />
    <result column="release_result" jdbcType="LONGVARCHAR" property="releaseResult" />
    <result column="release_msg" jdbcType="LONGVARCHAR" property="releaseMsg" />
  </resultMap>
  <sql id="Base_Column_List">
    id, release_conf_id, release_time, operation_time, service_id, version, release_user_id, 
    operation_user_id, review_user_id, review_time, task_status, cancel_user_id, idc_list
  </sql>
  <sql id="Blob_Column_List">
    release_detail, release_result, release_msg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from release
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from release
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.youxianqin.dockermgr.models.ReleaseWithBLOBs">
    insert into release (id, release_conf_id, release_time, 
      operation_time, service_id, version, 
      release_user_id, operation_user_id, review_user_id, 
      review_time, task_status, cancel_user_id, 
      idc_list, release_detail, release_result, 
      release_msg)
    values (#{id,jdbcType=INTEGER}, #{releaseConfId,jdbcType=INTEGER}, #{releaseTime,jdbcType=TIMESTAMP}, 
      #{operationTime,jdbcType=TIMESTAMP}, #{serviceId,jdbcType=INTEGER}, #{version,jdbcType=VARCHAR}, 
      #{releaseUserId,jdbcType=BIGINT}, #{operationUserId,jdbcType=BIGINT}, #{reviewUserId,jdbcType=BIGINT}, 
      #{reviewTime,jdbcType=TIMESTAMP}, #{taskStatus,jdbcType=INTEGER}, #{cancelUserId,jdbcType=INTEGER}, 
      #{idcList,jdbcType=VARCHAR}, #{releaseDetail,jdbcType=LONGVARCHAR}, #{releaseResult,jdbcType=LONGVARCHAR}, 
      #{releaseMsg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.youxianqin.dockermgr.models.ReleaseWithBLOBs">
    insert into release
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="releaseConfId != null">
        release_conf_id,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="operationTime != null">
        operation_time,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="releaseUserId != null">
        release_user_id,
      </if>
      <if test="operationUserId != null">
        operation_user_id,
      </if>
      <if test="reviewUserId != null">
        review_user_id,
      </if>
      <if test="reviewTime != null">
        review_time,
      </if>
      <if test="taskStatus != null">
        task_status,
      </if>
      <if test="cancelUserId != null">
        cancel_user_id,
      </if>
      <if test="idcList != null">
        idc_list,
      </if>
      <if test="releaseDetail != null">
        release_detail,
      </if>
      <if test="releaseResult != null">
        release_result,
      </if>
      <if test="releaseMsg != null">
        release_msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="releaseConfId != null">
        #{releaseConfId,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationTime != null">
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="releaseUserId != null">
        #{releaseUserId,jdbcType=BIGINT},
      </if>
      <if test="operationUserId != null">
        #{operationUserId,jdbcType=BIGINT},
      </if>
      <if test="reviewUserId != null">
        #{reviewUserId,jdbcType=BIGINT},
      </if>
      <if test="reviewTime != null">
        #{reviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskStatus != null">
        #{taskStatus,jdbcType=INTEGER},
      </if>
      <if test="cancelUserId != null">
        #{cancelUserId,jdbcType=INTEGER},
      </if>
      <if test="idcList != null">
        #{idcList,jdbcType=VARCHAR},
      </if>
      <if test="releaseDetail != null">
        #{releaseDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="releaseResult != null">
        #{releaseResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="releaseMsg != null">
        #{releaseMsg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.youxianqin.dockermgr.models.ReleaseWithBLOBs">
    update release
    <set>
      <if test="releaseConfId != null">
        release_conf_id = #{releaseConfId,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationTime != null">
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="releaseUserId != null">
        release_user_id = #{releaseUserId,jdbcType=BIGINT},
      </if>
      <if test="operationUserId != null">
        operation_user_id = #{operationUserId,jdbcType=BIGINT},
      </if>
      <if test="reviewUserId != null">
        review_user_id = #{reviewUserId,jdbcType=BIGINT},
      </if>
      <if test="reviewTime != null">
        review_time = #{reviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskStatus != null">
        task_status = #{taskStatus,jdbcType=INTEGER},
      </if>
      <if test="cancelUserId != null">
        cancel_user_id = #{cancelUserId,jdbcType=INTEGER},
      </if>
      <if test="idcList != null">
        idc_list = #{idcList,jdbcType=VARCHAR},
      </if>
      <if test="releaseDetail != null">
        release_detail = #{releaseDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="releaseResult != null">
        release_result = #{releaseResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="releaseMsg != null">
        release_msg = #{releaseMsg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.youxianqin.dockermgr.models.ReleaseWithBLOBs">
    update release
    set release_conf_id = #{releaseConfId,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      service_id = #{serviceId,jdbcType=INTEGER},
      version = #{version,jdbcType=VARCHAR},
      release_user_id = #{releaseUserId,jdbcType=BIGINT},
      operation_user_id = #{operationUserId,jdbcType=BIGINT},
      review_user_id = #{reviewUserId,jdbcType=BIGINT},
      review_time = #{reviewTime,jdbcType=TIMESTAMP},
      task_status = #{taskStatus,jdbcType=INTEGER},
      cancel_user_id = #{cancelUserId,jdbcType=INTEGER},
      idc_list = #{idcList,jdbcType=VARCHAR},
      release_detail = #{releaseDetail,jdbcType=LONGVARCHAR},
      release_result = #{releaseResult,jdbcType=LONGVARCHAR},
      release_msg = #{releaseMsg,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youxianqin.dockermgr.models.Release">
    update release
    set release_conf_id = #{releaseConfId,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      service_id = #{serviceId,jdbcType=INTEGER},
      version = #{version,jdbcType=VARCHAR},
      release_user_id = #{releaseUserId,jdbcType=BIGINT},
      operation_user_id = #{operationUserId,jdbcType=BIGINT},
      review_user_id = #{reviewUserId,jdbcType=BIGINT},
      review_time = #{reviewTime,jdbcType=TIMESTAMP},
      task_status = #{taskStatus,jdbcType=INTEGER},
      cancel_user_id = #{cancelUserId,jdbcType=INTEGER},
      idc_list = #{idcList,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.youxianqin.dockermgr.models.Release">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="release_conf_id" jdbcType="INTEGER" property="releaseConfId" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="operation_time" jdbcType="TIMESTAMP" property="operationTime" />
    <result column="service_id" jdbcType="INTEGER" property="serviceId" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="release_user_id" jdbcType="BIGINT" property="releaseUserId" />
    <result column="operation_user_id" jdbcType="BIGINT" property="operationUserId" />
    <result column="review_user_id" jdbcType="BIGINT" property="reviewUserId" />
    <result column="review_time" jdbcType="TIMESTAMP" property="reviewTime" />
    <result column="task_status" jdbcType="INTEGER" property="taskStatus" />
    <result column="cancel_user_id" jdbcType="INTEGER" property="cancelUserId" />
    <result column="idc_list" jdbcType="VARCHAR" property="idcList" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.youxianqin.dockermgr.models.ReleaseWithBLOBs">
    <result column="release_detail" jdbcType="LONGVARCHAR" property="releaseDetail" />
    <result column="release_result" jdbcType="LONGVARCHAR" property="releaseResult" />
    <result column="release_msg" jdbcType="LONGVARCHAR" property="releaseMsg" />
  </resultMap>
  <sql id="Base_Column_List">
    id, release_conf_id, release_time, operation_time, service_id, version, release_user_id, 
    operation_user_id, review_user_id, review_time, task_status, cancel_user_id, idc_list
  </sql>
  <sql id="Blob_Column_List">
    release_detail, release_result, release_msg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from release
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from release
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.youxianqin.dockermgr.models.ReleaseWithBLOBs">
    insert into release (id, release_conf_id, release_time, 
      operation_time, service_id, version, 
      release_user_id, operation_user_id, review_user_id, 
      review_time, task_status, cancel_user_id, 
      idc_list, release_detail, release_result, 
      release_msg)
    values (#{id,jdbcType=INTEGER}, #{releaseConfId,jdbcType=INTEGER}, #{releaseTime,jdbcType=TIMESTAMP}, 
      #{operationTime,jdbcType=TIMESTAMP}, #{serviceId,jdbcType=INTEGER}, #{version,jdbcType=VARCHAR}, 
      #{releaseUserId,jdbcType=BIGINT}, #{operationUserId,jdbcType=BIGINT}, #{reviewUserId,jdbcType=BIGINT}, 
      #{reviewTime,jdbcType=TIMESTAMP}, #{taskStatus,jdbcType=INTEGER}, #{cancelUserId,jdbcType=INTEGER}, 
      #{idcList,jdbcType=VARCHAR}, #{releaseDetail,jdbcType=LONGVARCHAR}, #{releaseResult,jdbcType=LONGVARCHAR}, 
      #{releaseMsg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.youxianqin.dockermgr.models.ReleaseWithBLOBs">
    insert into release
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="releaseConfId != null">
        release_conf_id,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="operationTime != null">
        operation_time,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="releaseUserId != null">
        release_user_id,
      </if>
      <if test="operationUserId != null">
        operation_user_id,
      </if>
      <if test="reviewUserId != null">
        review_user_id,
      </if>
      <if test="reviewTime != null">
        review_time,
      </if>
      <if test="taskStatus != null">
        task_status,
      </if>
      <if test="cancelUserId != null">
        cancel_user_id,
      </if>
      <if test="idcList != null">
        idc_list,
      </if>
      <if test="releaseDetail != null">
        release_detail,
      </if>
      <if test="releaseResult != null">
        release_result,
      </if>
      <if test="releaseMsg != null">
        release_msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="releaseConfId != null">
        #{releaseConfId,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationTime != null">
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="releaseUserId != null">
        #{releaseUserId,jdbcType=BIGINT},
      </if>
      <if test="operationUserId != null">
        #{operationUserId,jdbcType=BIGINT},
      </if>
      <if test="reviewUserId != null">
        #{reviewUserId,jdbcType=BIGINT},
      </if>
      <if test="reviewTime != null">
        #{reviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskStatus != null">
        #{taskStatus,jdbcType=INTEGER},
      </if>
      <if test="cancelUserId != null">
        #{cancelUserId,jdbcType=INTEGER},
      </if>
      <if test="idcList != null">
        #{idcList,jdbcType=VARCHAR},
      </if>
      <if test="releaseDetail != null">
        #{releaseDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="releaseResult != null">
        #{releaseResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="releaseMsg != null">
        #{releaseMsg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.youxianqin.dockermgr.models.ReleaseWithBLOBs">
    update release
    <set>
      <if test="releaseConfId != null">
        release_conf_id = #{releaseConfId,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationTime != null">
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="releaseUserId != null">
        release_user_id = #{releaseUserId,jdbcType=BIGINT},
      </if>
      <if test="operationUserId != null">
        operation_user_id = #{operationUserId,jdbcType=BIGINT},
      </if>
      <if test="reviewUserId != null">
        review_user_id = #{reviewUserId,jdbcType=BIGINT},
      </if>
      <if test="reviewTime != null">
        review_time = #{reviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskStatus != null">
        task_status = #{taskStatus,jdbcType=INTEGER},
      </if>
      <if test="cancelUserId != null">
        cancel_user_id = #{cancelUserId,jdbcType=INTEGER},
      </if>
      <if test="idcList != null">
        idc_list = #{idcList,jdbcType=VARCHAR},
      </if>
      <if test="releaseDetail != null">
        release_detail = #{releaseDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="releaseResult != null">
        release_result = #{releaseResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="releaseMsg != null">
        release_msg = #{releaseMsg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.youxianqin.dockermgr.models.ReleaseWithBLOBs">
    update release
    set release_conf_id = #{releaseConfId,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      service_id = #{serviceId,jdbcType=INTEGER},
      version = #{version,jdbcType=VARCHAR},
      release_user_id = #{releaseUserId,jdbcType=BIGINT},
      operation_user_id = #{operationUserId,jdbcType=BIGINT},
      review_user_id = #{reviewUserId,jdbcType=BIGINT},
      review_time = #{reviewTime,jdbcType=TIMESTAMP},
      task_status = #{taskStatus,jdbcType=INTEGER},
      cancel_user_id = #{cancelUserId,jdbcType=INTEGER},
      idc_list = #{idcList,jdbcType=VARCHAR},
      release_detail = #{releaseDetail,jdbcType=LONGVARCHAR},
      release_result = #{releaseResult,jdbcType=LONGVARCHAR},
      release_msg = #{releaseMsg,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youxianqin.dockermgr.models.Release">
    update release
    set release_conf_id = #{releaseConfId,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      service_id = #{serviceId,jdbcType=INTEGER},
      version = #{version,jdbcType=VARCHAR},
      release_user_id = #{releaseUserId,jdbcType=BIGINT},
      operation_user_id = #{operationUserId,jdbcType=BIGINT},
      review_user_id = #{reviewUserId,jdbcType=BIGINT},
      review_time = #{reviewTime,jdbcType=TIMESTAMP},
      task_status = #{taskStatus,jdbcType=INTEGER},
      cancel_user_id = #{cancelUserId,jdbcType=INTEGER},
      idc_list = #{idcList,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>