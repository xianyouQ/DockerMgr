<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youxianqin.dockermgr.dao.RoleUserMapper">
  <resultMap id="BaseResultMap" type="com.youxianqin.dockermgr.models.RoleUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="service_id" jdbcType="INTEGER" property="serviceId" />
    <result column="base_role_id" jdbcType="INTEGER" property="baseRoleId" />
  </resultMap>


  <resultMap id="BaseResultMapWithUser" type="com.youxianqin.dockermgr.models.RoleUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="service_id" jdbcType="INTEGER" property="serviceId" />
    <result column="base_role_id" jdbcType="INTEGER" property="baseRoleId" />
    <association property="user" javaType="com.youxianqin.dockermgr.models.User">
      <id column="u_id" jdbcType="INTEGER" property="id" />
      <result column="u_username" jdbcType="VARCHAR" property="username" />
      <result column="u_email" jdbcType="VARCHAR" property="email" />
      <result column="u_last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
      <result column="u_create_time" jdbcType="TIMESTAMP" property="createTime" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id,service_id,base_role_id
  </sql>
  <select id="getEntityByUser" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_user
    where user_id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getEntityByService" parameterType="java.lang.Integer" resultMap="BaseResultMapWithUser">
    select
    ru.id as id, ru.user_id as user_id,
    ru.service_id as service_id, ru.base_role_id as base_role_id, u.id as u_id, u.username as u_username, u.email as u_email,
    u.create_time as u_create_time, u.last_login_time as u_last_login_time
    from role_user ru
    inner join user u on u.id = ru.user_id
    where ru.service_id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteEntity">
    delete from role_user
    where user_id = #{user.id,jdbcType=INTEGER}
    and service_id = #{service.id,jdbcType=INTEGER}
    and base_role_id = #{baseRole.id,jdbcType=INTEGER}
  </delete>
  <insert id="addEntitys" >
    insert into role_user (user_id, service_id, base_role_id
      ) values
    <foreach collection="users" item="item" index="index" separator="," >
    (#{item.id,jdbcType=INTEGER},  #{service.id,jdbcType=INTEGER}, #{baseRole.id,jdbcType=INTEGER})
    </foreach>
  </insert>

  <delete id="deleteEntityByUser" parameterType="java.lang.Integer">
    delete from role_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>

  <delete id="deleteEntityByService" parameterType="java.lang.Integer">
    delete from role_user
    where service_id = #{serviceId,jdbcType=INTEGER}
  </delete>

  <delete id="deleteEntityByBaseRole" parameterType="java.lang.Integer">
    delete from role_user
    where base_role_id = #{baseRoleId,jdbcType=INTEGER}
  </delete>
</mapper>