<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youxianqin.dockermgr.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.youxianqin.dockermgr.models.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap id="BaseResultMapWithPassword" type="com.youxianqin.dockermgr.models.User" extends="BaseResultMap">
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>

  <sql id="Base_Column_List">
    id, username, password, email, last_login_time, create_time
  </sql>
  <select id="getEntityByName" parameterType="java.lang.String" resultMap="BaseResultMapWithPassword">
    select 
    <include refid="Base_Column_List" />
    from user
    where username = #{name,jdbcType=VARCHAR}
  </select>

  <select id="getEntity" resultMap="BaseResultMap">
    select
    id, username, email, last_login_time, create_time
    from user
  </select>
  <delete id="deleteEntity" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="addEntity" parameterType="com.youxianqin.dockermgr.models.User">
    insert into user (username, password,
      email, create_time
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR},  #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>

  <update id="updateEntity" parameterType="com.youxianqin.dockermgr.models.User">
    update user
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>