<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youxianqin.dockermgr.dao.ServiceMapper">
  <resultMap id="BaseResultMap" type="com.youxianqin.dockermgr.models.Service">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="release_ver_id" jdbcType="INTEGER" property="releaseVerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.youxianqin.dockermgr.models.Service">
    <result column="marathon_conf" jdbcType="LONGVARCHAR" property="marathonConf" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, code, release_ver_id
  </sql>
  <sql id="Blob_Column_List">
    marathon_conf
  </sql>
  <select id="getEntity" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from service
  </select>
  <delete id="deleteEntity" parameterType="java.lang.Integer">
    delete from service
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="addEntity" parameterType="com.youxianqin.dockermgr.models.Service">
    insert into service (name, code)
    values (#{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR})
  </insert>
  <update id="updateEntity" parameterType="com.youxianqin.dockermgr.models.Service">
    update service
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="releaseVerId != null">
        release_ver_id = #{releaseVerId,jdbcType=INTEGER},
      </if>
      <if test="marathonConf != null">
        marathon_conf = #{marathonConf,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>