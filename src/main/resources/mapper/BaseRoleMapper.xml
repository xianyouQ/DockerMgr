<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youxianqin.dockermgr.dao.BaseRoleMapper">
  <resultMap id="BaseResultMap" type="com.youxianqin.dockermgr.models.BaseRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="available" jdbcType="BIT" property="available" />
    <result column="cross_service" jdbcType="BIT" property="crossService" />
  </resultMap>
  <resultMap id="BaseResultMapWithPermission" type="com.youxianqin.dockermgr.models.BaseRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="available" jdbcType="BIT" property="available" />
    <result column="cross_service" jdbcType="BIT" property="crossService" />
    <collection  property="permissionList" ofType="com.youxianqin.dockermgr.models.Permission">
      <id column="p_id" jdbcType="INTEGER" property="id" />
      <result column="p_comment" jdbcType="VARCHAR" property="comment" />
      <result column="p_name" jdbcType="VARCHAR" property="name" />
      <result column="p_url" jdbcType="VARCHAR" property="url" />
      <result column="p_method" jdbcType="VARCHAR" property="method" />
      <result column="p_cross_service" jdbcType="BIT" property="crossService" />
    </collection >
  </resultMap>
  <sql id="Base_Column_List">
    id, name, available, cross_service
  </sql>
  <select id="getEntity" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from base_role
  </select>
  <select id="getEntityWithPermission" resultMap="BaseResultMapWithPermission">
    select
    r.id as id , r.name as name ,r.available as available ,r.cross_service as cross_service , p.id as p_id ,p.comment as p_comment,
    p.name as p_name, p.url as p_url , p.method as p_method,p.cross_service as p_cross_service
    from base_role r left join base_role_permission bp on bp.base_role_id = r.id left join permission p on  p.id = bp.permission_id
  </select>
  <delete id="deleteEntity" parameterType="java.lang.Integer">
    delete from base_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="addEntity" parameterType="com.youxianqin.dockermgr.models.BaseRole">
    insert into base_role (name, available,
      cross_service)
    values (#{name,jdbcType=VARCHAR}, #{available,jdbcType=BIT},
      #{crossService,jdbcType=BIT})
  </insert>


  <update id="updateEntity" parameterType="com.youxianqin.dockermgr.models.BaseRole">
    update base_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=BIT},
      </if>
      <if test="crossService != null">
        cross_service = #{crossService,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>